# syntax=docker/dockerfile:1.4
# -------------------------------
FROM python:3.12-alpine AS builder
WORKDIR /build

# ------------------------------
RUN apk add --no-cache build-base  # jeżeli potrzebne do kompilacji wheels

COPY requirements.txt .
RUN pip install --upgrade pip \
 && pip wheel -r requirements.txt -w wheels

# -----------------------------------
FROM python:3.12-alpine
LABEL org.opencontainers.image.authors="Paweł Peterwas <s99658@pollub.edu.pl>"
ENV PYTHONUNBUFFERED=1 PORT=8000
WORKDIR /app

# ---------------------------------
RUN apk add --no-cache --upgrade \
 && rm -rf /var/cache/apk/*

COPY requirements.txt .
COPY --from=builder /build/wheels /wheels
RUN pip install --no-index --find-links=/wheels -r requirements.txt \
 && rm -rf /wheels \
 && pip cache purge

COPY app ./app
COPY templates ./templates

EXPOSE ${PORT}
HEALTHCHECK CMD ["python","-c","import http.client,os,sys; c=http.client.HTTPConnection('localhost',int(os.getenv('PORT',8000))); c.request('GET','/'); sys.exit(0) if c.getresponse().status<500 else sys.exit(1)"]
ENTRYPOINT ["python","-m","uvicorn","app.main:app","--host","0.0.0.0","--port","8000"]
