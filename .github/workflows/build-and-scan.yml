# .github/workflows/build-and-scan.yml
name: Build, Scan & Publish

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read      # checkout
      packages: write     # push do GHCR

    steps:
    # --- źródła -------------------------------------------------------
    - name: Checkout code
      uses: actions/checkout@v4

    # --- Buildx -------------------------------------------------------
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container
        buildkitd-flags: --allow-insecure-entitlement network.host

    # --- loginy -------------------------------------------------------
    - name: Log in to Docker Hub (cache)
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}

    # --- budowanie ----------------------------------------------------
    - name: Build and push multi-arch image (cache + GHCR)
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        cache-from: |
          type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/pogodynka-cache:buildcache
          type=inline
        cache-to: |
          type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/pogodynka-cache:buildcache,mode=max
          type=inline
        tags: |
          ghcr.io/pawlox62/pogodynka:${{ github.sha }}
          ghcr.io/pawlox62/pogodynka:latest

    # --- skan CVE -----------------------------------------------------
    - name: Scan remote image for CRITICAL/HIGH
      run: |
        docker run --rm \
          -v /var/run/docker.sock:/var/run/docker.sock \
          -v $HOME/.docker/config.json:/root/.docker/config.json:ro \
          aquasec/trivy:latest image \
            --severity CRITICAL,HIGH \
            --exit-code 1 \
            --ignore-unfixed \
            --no-progress \
            ghcr.io/pawlox62/pogodynka:${{ github.sha }}

    # --- sukces -------------------------------------------------------
    - name: Verify and finish
      run: echo "✅ Image built, scanned (no CRITICAL/HIGH) and pushed"
