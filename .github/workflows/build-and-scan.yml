# .github/workflows/build-and-scan.yml
name: Build, Scan & Publish

on:
  push:
    branches: [ main ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          buildkitd-flags: --allow-insecure-entitlement network.host

      - name: Log in to Docker Hub (cache)
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image and push to cache
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          cache-from: |
            type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/pogodynka-cache:buildcache
            type=inline
          cache-to: |
            type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/pogodynka-cache:buildcache,mode=max
            type=inline
          tags: ghcr.io/${{ github.actor }}/pogodynka:${{ github.sha }}

      - name: Scan image for CRITICAL/HIGH
        run: |
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy:latest \
            image --severity CRITICAL,HIGH ghcr.io/${{ github.actor }}/pogodynka:${{ github.sha }}

      - name: Push image to GHCR
        if: success()
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: |
            type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/pogodynka-cache:buildcache
            type=inline
          cache-to: |
            type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/pogodynka-cache:buildcache,mode=max
            type=inline
          tags: |
            ghcr.io/${{ github.actor }}/pogodynka:${{ github.sha }}
            ghcr.io/${{ github.actor }}/pogodynka:latest
